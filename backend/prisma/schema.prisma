// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  email         String      @unique
  firstName     String?     
  lastName      String?     
  phoneNumber   String?     @unique @map("phone_number")
  role          Role        @default(USER)
  balance       Decimal     @default(0) @db.Decimal(10, 2)
  
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")

  orders        Order[]

  @@map("users")
}

model Product {
  id            Int         @id @default(autoincrement())
  name          String
  description   String?
  quantity      Int         @default(0)
  price         Decimal     @db.Decimal(10, 2)
  trainerPrice  Decimal     @db.Decimal(10, 2) @map("trainer_price")
  cost          Decimal     @db.Decimal(10, 2)
  isActive      Boolean     @default(true)

  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")
  
  orderDetails  OrderDetail[]

  @@map("products")
}

model Order {
  id            Int         @id @default(autoincrement())

  client        User        @relation(fields: [clientId], references: [id])
  clientId      Int

  totalAmount   Decimal     @map("total_amount") @db.Decimal(10, 2)
  date          DateTime    @default(now())
  paymentMethod PaymentType @map("payment_method")

  notes         String?

  products      OrderDetail[]

  @@map("orders")
}

model OrderDetail {
  id            Int         @id @default(autoincrement())

  order         Order       @relation(fields: [orderId], references: [id])
  orderId       Int
  
  product       Product     @relation(fields: [productId], references: [id])
  productId     Int         

  quantity      Int

  unitPrice     Decimal     @map("unit_price") @db.Decimal(10, 2)
  totalPrice   Decimal     @map("total_price") @db.Decimal(10, 2)

  @@map("order_details")
}

enum Role {
  TRAINER
  USER
}

enum PaymentType {
  CREDITCARD
  PAYPAL
  CASH
  QRCODE
}